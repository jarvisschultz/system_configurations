(push "~/.emacs.d/" load-path)

(column-number-mode 1)
(setq inhibit-startup-message t)
(setq make-backup-files nil)
(put 'scroll-left 'disabled nil)

;; add marmalade functionality:
(require 'package)
(add-to-list 'package-archives 
    '("marmalade" .
      "http://marmalade-repo.org/packages/"))
(package-initialize)

;; disable the scroll bar:
(toggle-scroll-bar -1)

;; Turn on syntax highlighting
(global-font-lock-mode t)
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
(add-to-list 'default-frame-alist '(font . "DejaVu Sans Mono-10"))

;; Set the default window size if we are not running in the no window option:
(if (window-system) (set-frame-height (selected-frame) 47))
(if (window-system) (set-frame-width (selected-frame) 102))


;; Enter also indents in cc-mode
(defun my-make-CR-do-indent ()
   (define-key c-mode-base-map "\C-m" 'c-context-line-break))
(add-hook 'c-initialization-hook 'my-make-CR-do-indent)

;; Choose default cc-mode styles
(setq c-default-style '((other . "linux")))
(setq c-basic-offset 4)

;; Add autocomplete package:
(add-to-list 'load-path "~/.emacs.d/auto-complete/")
(require 'auto-complete-config)
(add-to-list 'ac-dictionary-directories "~/.emacs.d/auto-complete//ac-dict")
(ac-config-default)
(define-key global-map (kbd "<C-tab>") 'ac-fuzzy-complete)
;; add LaTeX-auto-complete mode
(require 'ac-math)
(add-to-list 'ac-modes 'latex-mode)   ; make auto-complete aware of {{{latex-mode}}}
(defun ac-latex-mode-setup ()         ; add ac-sources to default ac-sources
  (setq ac-sources
     (append '(ac-source-math-unicode ac-source-math-latex ac-source-latex-commands)
               ac-sources))
)
(add-hook 'LaTeX-mode-hook 'auto-complete-mode)
(add-hook 'LaTeX-mode-hook 'ac-latex-mode-setup)
(ac-flyspell-workaround)

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(LaTeX-command "latex --src-specials")
 '(ansi-color-names-vector ["#3f3f3f" "#cc9393" "#7f9f7f" "#f0dfaf" "#8cd0d3" "#dc8cc3" "#93e0e3" "#dcdccc"])
 '(column-number-mode t)
 '(custom-safe-themes (quote ("71b172ea4aad108801421cc5251edb6c792f3adbaecfa1c52e94e3d99634dee7" "bf9d5728e674bde6a112979bd830cc90327850aaaf2e6f3cc4654f077146b406" default)))
 '(fci-rule-color "#383838")
 '(highlight-nonselected-windows t)
 '(matlab-comment-line-s "% ")
 '(matlab-comment-on-line-s "% ")
 '(matlab-comment-region-s "% ")
 '(matlab-shell-ask-MATLAB-for-completions nil)
 '(preview-auto-cache-preamble t)
 '(preview-scale-function 1.25)
 '(safe-local-variable-values (quote ((TeX-parse-self . t) (TeX-auto-save . t))))
 '(save-place t nil (saveplace))
 '(show-paren-mode t)
 '(text-mode-hook (quote (turn-on-auto-fill text-mode-hook-identify)))
 '(warning-suppress-types (quote ((\(quote\ \(\(undo\ discard-info\)\)\)))))
 '(wdired-allow-to-change-permissions t))

;; Bind a new key for changing line wrapping properties:
(define-key global-map [f5] 'toggle-truncate-lines)
(setq-default truncate-lines t)
(setq truncate-partial-width-windows nil) ;; for vertically-split windows

;; Bind a key for compiling code:
(global-set-key [f12] 'compile)

;; Miscellaneous bindings:
(global-set-key "\M-g" 'goto-line)
(global-set-key [f10] 'shell)

;; Binding for running a bash script:
(require 'tex)
(define-key TeX-mode-map [f11] (lambda() (interactive) (shell-command "./LatexCompile")))

;; Turn on window saving mode for restoring window configs:
(winner-mode 1)

;; Add Latex functionality
(setq-default TeX-master nil)
(setq TeX-parse-self t)
(setq TeX-auto-save t)

;; Add reverse LaTeX searching:
(setq TeX-source-specials-mode 1)
(setq Tex-source-specials-view-start-server t)
(add-to-list 'TeX-command-list '("View" "%V" TeX-run-discard nil t))
(add-to-list 'TeX-output-view-style 
	     '("^dvi$" "." 
	       "%(o?)xdvi -watchfile 1 %dS %d"))

;; Modifty the command for parsing LaTeX errors to be compatible with
;; icicles:
(global-set-key (kbd "C-c C-`") 'TeX-next-error)
(global-set-key (kbd "C-c C-g") 'top-level)

;; bind key for the new emacs24 function count-words
(global-set-key (kbd "C-c C-=") 'count-words)


;; Turn on FlySpell for some things by default
;(add-hook          'c-mode-hook 'flyspell-prog-mode)
;(add-hook         'sh-mode-hook 'flyspell-prog-mode)
;(add-hook        'c++-mode-hook 'flyspell-prog-mode)
;(add-hook       'ruby-mode-hook 'flyspell-prog-mode)
;(add-hook      'cperl-mode-hook 'flyspell-prog-mode)
;(add-hook     'python-mode-hook 'flyspell-prog-mode)
;(add-hook   'autoconf-mode-hook 'flyspell-prog-mode)
;(add-hook   'autotest-mode-hook 'flyspell-prog-mode)
;(add-hook   'makefile-mode-hook 'flyspell-prog-mode)
;(add-hook 'emacs-lisp-mode-hook 'flyspell-prog-mode)
(add-hook 'text-mode-hook 'flyspell-mode-on)
(add-hook 'change-log-mode-hook 'flyspell-mode-on)
(add-hook 'tex-mode-hook 'flyspell-mode-on)
(add-hook 'tex-mode-hook (function (lambda () (setq ispell-parser 'tex))))
(add-hook 'texinfo-mode
	  '(lambda () (setq flyspell-generic-check-word-p
			    'texinfo-mode-flyspell-verify)))

;; Add matlab-emacs mode
(add-to-list 'load-path "~/src/emacs_stuff/matlab-emacs/")
;(load-library "matlab-load")
(autoload 'matlab-mode "matlab" "Matlab Editing Mode" t)
(add-to-list
 'auto-mode-alist
 '("\\.m$" . matlab-mode))
(setq matlab-indent-function t)
(setq matlab-shell-command "matlab")
(setq matlab-shell-command-switches '("-nodesktop"))

;; Add processing-emacs mode
(add-to-list 'load-path "~/src/emacs_stuff/processing-emacs/")
(autoload 'processing-mode "processing-mode" "Processing mode" t)
(add-to-list 'auto-mode-alist '("\\.pde$" . processing-mode))
(setq processing-location "~/processing-1.5.1/")

;; Turn on CamelCase mode by default
(add-hook 'c-mode-common-hook
	  (lambda () (subword-mode 1)))
(add-hook 'c++-mode-common-hook
	  (lambda () (subword-mode 1)))
(add-hook 'python-mode-hook
	  (lambda () (subword-mode 1)))

;; Icicle functionality
(add-to-list 'load-path "~/.emacs.d/icicles")
(require 'icicles)
(setq icicle-expand-input-to-common-match-flag nil)
(setq icicle-search-replace-common-match-flag nil)
(setq icicle-region-background "#4f4f4f")


;; add python functionality
(require 'python-mode)
(fset 'python-beginning-of-line
   "\C-a\223\\w\C-b")
(add-hook 'python-mode-hook (function (lambda () (define-key
						   python-mode-map (kbd "M-a")
						   'python-beginning-of-line))))
;; (add-to-list 'load-path "/home/jarvis/src/emacs_stuff/python-mode.el-6.0.10/")
;; (add-to-list 'load-path "/home/jarvis/src/emacs_stuff/python-mode.el-6.0.10/completion/")
;; (setq py-install-directory "/home/jarvis/src/emacs_stuff/python-mode.el-6.0.10/")
;; (require 'ipython)

;; Add functionality for rosemacs
(add-to-list 'load-path "/home/jarvis/ros/stacks/rosemacs/")
(require 'rosemacs)
(invoke-rosemacs)

;; add a keymap for using rosemacs commands
(global-set-key "\C-x\C-r" ros-keymap)

;; turn on icicles by default
(icy-mode 1)

;; add shortcuts for splitting and changing windows
(global-set-key (kbd "M-1") 'delete-other-windows)
(global-set-key (kbd "M-2") 'split-window-vertically)
(global-set-key (kbd "M-3") 'split-window-horizontally)
(global-set-key (kbd "M-4") 'other-window)

;; set ibuffer to completely replace the functionality of the buffer
;; list
;; (defalias 'list-buffers 'ibuffer)
;; (iswitchb-mode 1)

;; turn off menu bars:
(if (fboundp 'tool-bar-mode) (tool-bar-mode -1))
(if (fboundp 'menu-bar-mode) (menu-bar-mode -1))

;; bind regex forward and backward search to a easier keyboard
;; commands:
(global-set-key (kbd "C-M-s") 'isearch-forward-regexp)
(global-set-key (kbd "C-M-r") 'isearch-backward-regexp)

;; make python mode recognize _ as a word separator
(modify-syntax-entry ?_ "." py-mode-syntax-table)
(modify-syntax-entry ?_ "." python-mode-syntax-table)

;; add a function for formatting c-code within the LaTeX major mode:
(defun indent-region-as-c (beg end)
  "Switch to c-mode, indent the region, then switch back to LaTeX mode."
  (interactive "r")
  (c-mode)
  (indent-region beg end)
  (LaTeX-mode))

(add-hook 'LaTeX-mode-hook (lambda () (define-key LaTeX-mode-map (kbd "<f9>") 'indent-region-as-c)))
(put 'narrow-to-region 'disabled nil)

;; Add functionality for expand region:
(add-to-list 'load-path "~/.emacs.d/expand-region.el")
(require 'expand-region)
(global-set-key (kbd "C-=") 'er/expand-region)
(global-set-key (kbd "C-+") 'er/contract-region)

;; add functionality for art-bollocks mode
;(require 'artbollocks-mode)

;; add functionality for textlint mode
(add-to-list 'load-path "~/.emacs.d/textlint/")
(require 'textlint)

;; enable clipboard yanking
(setq x-select-enable-clipboard t)

;; turn on shell auto-coloring by default
(setq ansi-color-for-comint-mode t)

;; set the value of the macro ring buffer
(setq kmacro-ring-max 20)

;; fix commenting problems in xml mode
(require 'mz-comment-fix)
(add-to-list 'comment-strip-start-length (cons 'nxml-mode 3))

;; add mathematica mode:
(require 'mathematica)

;; enable delete-selection-mode
(delete-selection-mode 1)

;; add tramp functionality:
(require 'tramp)
(setq tramp-default-method "scp")

;; start server if not already running when using just 'emacs' on command line
(require 'server)
(or (server-running-p)
    (server-start))

;; add color functionality
(add-to-list 'load-path "~/.emacs.d/themes")
(add-to-list 'custom-theme-load-path "~/.emacs.d/themes/")
(require 'color-theme)
(require 'color-theme-tango)
(eval-after-load "color-theme"
  '(progn
     (color-theme-initialize)))
(setq color-theme-is-global nil)

(defvar after-make-console-frame-hooks '()
"Hooks to run after creating a new TTY frame")
(defvar after-make-window-system-frame-hooks '()
"Hooks to run after creating a new window-system frame")

(defun run-after-make-frame-hooks (frame)
"Selectively run either `after-make-console-frame-hooks' or
`after-make-window-system-frame-hooks'"
(select-frame frame)
(run-hooks (if window-system
'after-make-window-system-frame-hooks
'after-make-console-frame-hooks)))

(defun set-my-custom-window-settings ()
"remove scroll bar and set window size"
(toggle-scroll-bar -1)
(set-frame-width (selected-frame) 98)
(set-frame-height (selected-frame) 48)
(load-theme 'zenburn t)
)

(defun set-my-custom-terminal-settings ()
"remove scroll bar and set window size"
(load-theme 'zenburn t)
)

(add-hook 'after-make-frame-functions 'run-after-make-frame-hooks)
(add-hook 'after-init-hook
(lambda () (run-after-make-frame-hooks (selected-frame))))

(set-variable 'color-theme-is-global nil)
(add-hook 'after-make-window-system-frame-hooks 'set-my-custom-window-settings)
(add-hook 'after-make-console-frame-hooks 'set-my-custom-terminal-settings)
;; (add-hook 'after-make-window-system-frame-hooks 'color-theme-tango)
;; (add-hook 'after-make-console-frame-hooks 'color-theme-dark-gnus)

;; add functionality for magit mode
(require 'magit)

;; something keeps resetting the indentation settings 
(setq nxml-child-indent 2)
